; /*****************************************************************************
;  * ugBASIC - an isomorphic BASIC language compiler for retrocomputers        *
;  *****************************************************************************
;  * Copyright 2021-2025 Marco Spedaletti (asimov@mclink.it)
;  *
;  * Licensed under the Apache License, Version 2.0 (the "License");
;  * you may not use this file except in compliance with the License.
;  * You may obtain a copy of the License at
;  *
;  * http://www.apache.org/licenses/LICENSE-2.0
;  *
;  * Unless required by applicable law or agreed to in writing, software
;  * distributed under the License is distributed on an "AS IS" BASIS,
;  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;  * See the License for the specific language governing permissions and
;  * limitations under the License.
;  *----------------------------------------------------------------------------
;  * Concesso in licenza secondo i termini della Licenza Apache, versione 2.0
;  * (la "Licenza"); è proibito usare questo file se non in conformità alla
;  * Licenza. Una copia della Licenza è disponibile all'indirizzo:
;  *
;  * http://www.apache.org/licenses/LICENSE-2.0
;  *
;  * Se non richiesto dalla legislazione vigente o concordato per iscritto,
;  * il software distribuito nei termini della Licenza è distribuito
;  * "COSì COM'è", SENZA GARANZIE O CONDIZIONI DI ALCUN TIPO, esplicite o
;  * implicite. Consultare la Licenza per il testo specifico che regola le
;  * autorizzazioni e le limitazioni previste dalla medesima.
;  ****************************************************************************/
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                                                                             *
;*                           IMAGES ROUTINE FOR EF936X                         *
;*                                                                             *
;*                             by Marco Spedaletti                             *
;*                                                                             *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

;--------------

PUTIMAGE

@IF vestigialConfig.doubleBufferSelected 

@ELSE

    ; Check if double buffering is active -- in case,
    ; whe should use a different version.
    LDA DOUBLEBUFFERENABLED
    CMPA #0
    LBEQ PUTIMAGEORIG

@ENDIF

; ----------------------------------------------
; Version active on double buffering ON
; ----------------------------------------------

@IF !vestigialConfig.doubleBufferSelected || vestigialConfig.doubleBuffer

    ORCC #$50

@IF PC128OP

    PSHS D
    LDA BANKSHADOW
    STA BASE_SEGMENT+$E5
    PULS D

@ENDIF

@IF vestigialConfig.screenModeUnique

@ELSE

PUTIMAGEDB
    LDA CURRENTMODE
    CMPA #0
    BNE PUTIMAGE0XDB
    JMP PUTIMAGE0DB
PUTIMAGE0XDB
    CMPA #1
    BNE PUTIMAGE1XDB
    JMP PUTIMAGE1DB
PUTIMAGE1XDB
    CMPA #2
    BNE PUTIMAGE2XDB
    JMP PUTIMAGE2DB
PUTIMAGE2XDB
    CMPA #3
    BNE PUTIMAGE3XDB
    JMP PUTIMAGE3DB
PUTIMAGE3XDB
    CMPA #4
    BNE PUTIMAGE4XDB
    JMP PUTIMAGE4DB
PUTIMAGE4XDB

@IF PC128OP

    PSHS D
    LDA #7
    STA BASE_SEGMENT+$E5
    PULS D

@ENDIF

    ANDCC #$AF

    RTS

@ENDIF

@IF !vestigialConfig.screenModeUnique || ( ( currentMode == 1 ) || ( currentMode == 4 ) )

PUTIMAGE1DB
PUTIMAGE4DB

@IF PC128OP

    PSHS D
    LDA #7
    STA BASE_SEGMENT+$E5
    PULS D

@ENDIF

    ANDCC #$AF

    RTS

@ENDIF

@IF !vestigialConfig.screenModeUnique || ( ( currentMode == 0 ) || ( currentMode == 2 ) )

PUTIMAGE0DB
PUTIMAGE2DB

    PSHS Y

    LDX BITMAPADDRESS

    ANDCC #$FE
    LDD <IMAGEY
    STD <IMAGEY2
    LSLB
    ROLA
    LSLB
    ROLA

    LSLB
    ROLA

    TFR D, Y

    ANDCC #$FE
    LDD <IMAGEY
    STD <IMAGEY2
    LSLB
    ROLA
    LSLB
    ROLA

    LSLB
    ROLA
    LSLB
    ROLA
    LSLB
    ROLA

    LEAY D, Y
    TFR Y, D
    LEAX D, X

    ANDCC #$FE
    LDD <IMAGEX
    LSRA
    RORB
    LSRA
    RORB
    LSRA
    RORB
    LEAX D, X

    PULS Y

    ; 128 -> 32768 pixels
    LDD ,Y
    LSRA
    RORB
    LSRA
    RORB
    LSRA
    RORB
    STD <IMAGEW
    STD <IMAGEW2
    LDA 2,Y
    STA <IMAGEH
    STA <IMAGEH2

    LEAY 3,Y

    ; 128 -> 32768 pixels
    LDD <IMAGEW
    PSHS D
    LDB <IMAGEH
    PSHS X,D

    JMP PUTIMAGE2YDB

@ENDIF

@IF !vestigialConfig.screenModeUnique || ( ( currentMode == 3 ) )

PUTIMAGE3DB

    PSHS Y

    CLRA
    STA <IMAGEY
    STA <IMAGEY2
    LDB <IMAGEY+1
    STB <IMAGEY2+1
    LSLB
    ROLA
    ADDD #PLOTVBASE
    TFR D, X
    LDD , X
    TFR D, X

    CLRA
    STA <(IMAGEX)
    LDB <(IMAGEX+1)
    LSRB
    LSRB
    LEAX B, X

    PULS Y

    ; 128 -> 32768 pixels
    LDD ,Y
    LSRA
    RORB
    LSRA
    RORB
    STD <IMAGEW
    STD <IMAGEW2
    PSHS D
    LDA 2,Y
    STA <IMAGEH
    STA <IMAGEH2

    LEAY 3,Y

    LDA <IMAGEW
    LDB <IMAGEH
    PSHS X,D

    JMP PUTIMAGE2YDB

@ENDIF

PUTIMAGE2YDB
    LDA <IMAGEF
    ANDA #32
    CMPA #32
    LBNE PUTIMAGE2YDEFDB

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

PUTIMAGE2YTRANSDB
    LDA CURRENTMODE
    ; CMPA #2
    ; BEQ PUTIMAGE2YTRANS2
    CMPA #3
    BEQ PUTIMAGE2YTRANS3DB
    JMP PUTIMAGE2YDEFDB

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

PUTIMAGE2YTRANS3DB

@IF PC128OP

    LEAX $8000,X

@ELSE

@ENDIF

    LDD <IMAGEW2
    STD <IMAGEW

PUTIMAGE2YTRANS3L1DB000
    LDB <(IMAGEW+1)
    DECB

PUTIMAGE2YTRANS3L1DB

@IF transparencyCoarse

    LDA B,Y
    BEQ PUTIMAGE2YTRANS3L12P4XDB
    STA B,X
PUTIMAGE2YTRANS3L12P4XDB

@ELSE

    LDA #0
    STA <MATHPTR5
    LDA B,Y
    ; 00 01 10 00
    ANDA #$F0
    ; -> 00 00 00 00
    BEQ PUTIMAGE2YTRANS3L12P4XDB
    LDA <MATHPTR5
    ORA #$F0
    STA <MATHPTR5
PUTIMAGE2YTRANS3L12P4XDB
    LDA B,Y
    ; 00 01 10 00
    ANDA #$0F
    ; -> 00 01 00 00
    BEQ PUTIMAGE2YTRANS3L12P3XDB
    LDA <MATHPTR5
    ORA #$0F
    ; MATH PTR = 00 11 00 00
    STA <MATHPTR5
PUTIMAGE2YTRANS3L12P3XDB
    LDA <MATHPTR5
    ; 00 11 11 00
    EORA #$FF
    ; 11 00 00 11
    STA <MATHPTR6
    LDA B,X
    ; 00 00 00 00
    ANDA <MATHPTR6
    STA <MATHPTR6
    ; 00 00 00 00
    LDA B,Y
    ANDA <MATHPTR5
    ORA <MATHPTR6
    STA B,X

@ENDIF

    DECB
    CMPB #0
    BGE PUTIMAGE2YTRANS3L1DB

    LDU <IMAGEW
    LEAU -128, U
    STU <IMAGEW
    CMPU #0
    BLE PUTIMAGE2YTRANS3L1DB001

    LEAY 128, Y
    LEAX 128, X
    JMP PUTIMAGE2YTRANS3L1DB000

PUTIMAGE2YTRANS3L1DB001

    LDA <IMAGEF
    ANDA #64
    CMPA #0
    BEQ PUTIMAGE2YTRANS3L1DBN

    LDA <IMAGEF
    ANDA #1
    CMPA #1
    BEQ PUTIMAGE2YTRANS3L1DBN0

    ORA #65
    STA <IMAGEF

    LDD <IMAGEW2
    STD <IMAGEW
    LDB CURRENTSL
    LEAX B, X
    JMP PUTIMAGE2YTRANS3L1DB000

PUTIMAGE2YTRANS3L1DBN0
    LDA <IMAGEF
    ANDA #$FE
    STA <IMAGEF

PUTIMAGE2YTRANS3L1DBN

    LDD <IMAGEW2
    LEAY D, Y

    LDB CURRENTSL
    LEAX B, X

    DEC <IMAGEH
    LDB <IMAGEH
    CMPB #0
    BEQ PUTIMAGE2YTRANSCOMMONE2DB

    LDD <IMAGEW2
    STD <IMAGEW
    JMP PUTIMAGE2YTRANS3L1DB000

PUTIMAGE2YTRANSCOMMONE2DBA

PUTIMAGE2YTRANSCOMMONE2DBAY

    LDD <IMAGEW2
    LEAY D, Y
    DEC <IMAGEH
    LDB <IMAGEH
    CMPB #0
    BNE PUTIMAGE2YTRANSCOMMONE2DBAY

PUTIMAGE2YTRANSCOMMONE2DB

    LDD <IMAGEY2
    STD <IMAGEY

    PULS X,D
    STB <IMAGEH
    PULS D
    STD <IMAGEW

@IF PC128OP

    LEAX $6000,X

@ELSE

    LEAX $2000,X

@ENDIF

    ; LDA BASE_SEGMENT+$c0
    ; ANDA #$fe
    ; STA BASE_SEGMENT+$c0

PUTIMAGE2YTRANS3L12DB000
    LDB <(IMAGEW+1)
    DECB

PUTIMAGE2YTRANS3L12DB

@IF transparencyCoarse

    LDA B,Y
    BEQ PUTIMAGE2YTRANS3L12P4XDB2
    STA B,X
PUTIMAGE2YTRANS3L12P4XDB2

@ELSE

    LDA #0
    STA <MATHPTR5
    LDA B,Y
    ; 00 01 10 00
    ANDA #$F0
    ; -> 00 00 00 00
    BEQ PUTIMAGE2YTRANS3L12P4XDB2
    LDA <MATHPTR5
    ORA #$F0
    STA <MATHPTR5
PUTIMAGE2YTRANS3L12P4XDB2
    LDA B,Y
    ; 00 01 10 00
    ANDA #$0F
    ; -> 00 01 00 00
    BEQ PUTIMAGE2YTRANS3L12P3XDB2
    LDA <MATHPTR5
    ORA #$0F
    ; MATH PTR = 00 11 00 00
    STA <MATHPTR5
PUTIMAGE2YTRANS3L12P3XDB2
    LDA <MATHPTR5
    ; 00 11 11 00
    EORA #$FF
    ; 11 00 00 11
    STA <MATHPTR6
    LDA B,X
    ; 00 00 00 00
    ANDA <MATHPTR6
    STA <MATHPTR6
    ; 00 00 00 00
    LDA B,Y
    ANDA <MATHPTR5
    ORA <MATHPTR6
    STA B,X

@ENDIF

    DECB
    CMPB #0
    BGE PUTIMAGE2YTRANS3L12DB

    LDU <IMAGEW
    LEAU -128, U
    STU <IMAGEW
    CMPU #0
    BLE PUTIMAGE2YTRANS3L12DB001

    LEAY 128, Y
    LEAX 128, X
    JMP PUTIMAGE2YTRANS3L12DB000

PUTIMAGE2YTRANS3L12DB001

    LDA <IMAGEF
    ANDA #64
    CMPA #0
    BEQ PUTIMAGE2YTRANS3L12DBN

    LDA <IMAGEF
    ANDA #1
    CMPA #1
    BEQ PUTIMAGE2YTRANS3L12DBN0

    ORA #65
    STA <IMAGEF

    LDD <IMAGEW2
    STD <IMAGEW
    LDB CURRENTSL
    LEAX B, X
    JMP PUTIMAGE2YTRANS3L12DB000

PUTIMAGE2YTRANS3L12DBN0
    LDA <IMAGEF
    ANDA #$FE
    STA <IMAGEF

PUTIMAGE2YTRANS3L12DBN

    LDD <IMAGEW2
    LEAY D, Y

    LDB CURRENTSL
    LEAX B, X

    DEC <IMAGEH
    LDB <IMAGEH
    CMPB #0
    LBEQ PUTIMAGE2COMMONE5DB

    LDD <IMAGEW2
    STD <IMAGEW
    JMP PUTIMAGE2YTRANS3L12DB000

PUTIMAGE2COMMONE5DBA

PUTIMAGE2COMMONE5DBAY

    LDD <IMAGEW2
    LEAY D, Y
    DEC <IMAGEH
    LDB <IMAGEH
    CMPB #$0
    BNE PUTIMAGE2COMMONE5DBAY

PUTIMAGE2COMMONE5DB

    LDD <IMAGEY2
    STD <IMAGEY

    JMP PUTIMAGECOMMONEDB

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

PUTIMAGE2YDEFDB
    LDA <IMAGEF
    ANDA #64
    BNE PUTIMAGE2YDEFDBL128

    LDD <IMAGEW
    CMPD #127
    LBLE PUTIMAGE2YDEFDBW128

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; --- ORIGINAL VERSION
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

PUTIMAGE2YDEFDBL128

    ; LDA BASE_SEGMENT+$c0
    ; ORA #$01
    ; STA BASE_SEGMENT+$c0

@IF PC128OP

    LEAX $8000,X

@ELSE

@ENDIF

    LDD <IMAGEW2
    STD <IMAGEW

PUTIMAGE2L1DB000
    LDB <(IMAGEW+1)
    DECB
PUTIMAGE2L1DB
    LDA B,Y
    STA B,X
    DECB
    CMPB #0
    BGE PUTIMAGE2L1DB

    LDU <IMAGEW
    LEAU -128, U
    STU <IMAGEW
    CMPU #0
    BLE PUTIMAGE2L1DB001

    LEAY 128, Y
    LEAX 128, X
    JMP PUTIMAGE2L1DB000

PUTIMAGE2L1DB001

    LDA <IMAGEF
    ANDA #64
    CMPA #0
    BEQ PUTIMAGE2L1DBN

    LDA <IMAGEF
    ANDA #1
    CMPA #1
    BEQ PUTIMAGE2L1DBN0

    ORA #65
    STA <IMAGEF

    LDD <IMAGEW2
    STD <IMAGEW
    LDB CURRENTSL
    LEAX B, X
    JMP PUTIMAGE2L1DB000

PUTIMAGE2L1DBN0
    LDA <IMAGEF
    ANDA #$FE
    STA <IMAGEF

PUTIMAGE2L1DBN

    LDD <IMAGEW2
    LEAY D, Y

    LDB CURRENTSL
    LEAX B, X

    DEC <IMAGEH
    LDB <IMAGEH
    CMPB #0
    BEQ PUTIMAGECOMMONE2DB

    LDD <IMAGEW2
    STD <IMAGEW
    JMP PUTIMAGE2L1DB000

PUTIMAGECOMMONE2DBA

PUTIMAGECOMMONE2DBAY

    LDD <IMAGEW2
    LEAY D, Y
    DEC <IMAGEH
    LDB <IMAGEH
    CMPB #0
    BNE PUTIMAGECOMMONE2DBAY

PUTIMAGECOMMONE2DB

    LDD <IMAGEY2
    STD <IMAGEY

    PULS X,D
    STB <IMAGEH
    PULS D
    STD <IMAGEW

@IF PC128OP

    LEAX $6000,X

@ELSE

    LEAX $2000,X

@ENDIF

    ; LDA BASE_SEGMENT+$c0
    ; ANDA #$fe
    ; STA BASE_SEGMENT+$c0

PUTIMAGE2L12DB000
    LDB <(IMAGEW+1)
    DECB
PUTIMAGE2L12DB
    LDA B,Y
    STA B,X
    DECB
    CMPB #0
    BGE PUTIMAGE2L12DB

    LDU <IMAGEW
    LEAU -128, U
    STU <IMAGEW
    CMPU #0
    BLE PUTIMAGE2L12DB001

    LEAY 128, Y
    LEAX 128, X
    JMP PUTIMAGE2L12DB000

PUTIMAGE2L12DB001

    LDA <IMAGEF
    ANDA #64
    CMPA #0
    BEQ PUTIMAGE2L12DBN

    LDA <IMAGEF
    ANDA #1
    CMPA #1
    BEQ PUTIMAGE2L12DBN0

    ORA #65
    STA <IMAGEF

    LDD <IMAGEW2
    STD <IMAGEW
    LDB CURRENTSL
    LEAX B, X
    JMP PUTIMAGE2L12DB000

PUTIMAGE2L12DBN0
    LDA <IMAGEF
    ANDA #$FE
    STA <IMAGEF

PUTIMAGE2L12DBN

    LDD <IMAGEW2
    LEAY D, Y

    LDB CURRENTSL
    LEAX B, X

    DEC <IMAGEH
    LDB <IMAGEH
    CMPB #0
    LBEQ PUTIMAGECOMMONE5DB

    LDD <IMAGEW2
    STD <IMAGEW
    JMP PUTIMAGE2L12DB000

PUTIMAGECOMMONE5DBA

PUTIMAGECOMMONE5DBAY

    LDD <IMAGEW2
    LEAY D, Y
    DEC <IMAGEH
    LDB <IMAGEH
    CMPB #$0
    BNE PUTIMAGECOMMONE5DBAY

PUTIMAGECOMMONE5DB

    LDD <IMAGEY2
    STD <IMAGEY

;     LDA CURRENTMODE
;     CMPA #3
;     BEQ PUTIMAGECOMMONE53
;     LDU #4
;     JMP PUTIMAGECOMMONE50
; PUTIMAGECOMMONE53
;     LDU #16
;     JMP PUTIMAGECOMMONE50

; PUTIMAGECOMMONE50
;     LDA #0
;     STA BASE_SEGMENT+$DB
; PUTIMAGECOMMONE50L1
;     LDD ,Y
;     LEAY 2,Y
;     STB BASE_SEGMENT+$DA
;     STA BASE_SEGMENT+$DA
;     LEAU -1, U
;     CMPU #$FFFF
    ; BNE PUTIMAGECOMMONE50L1

PUTIMAGECOMMONEDB

@IF PC128OP

    PSHS D
    LDA #7
    STA BASE_SEGMENT+$E5
    PULS D

@ENDIF

    ANDCC #$AF
    
	RTS

@ENDIF

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; --- OPTIMIZED VERSION (w < 128, no double y)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

PUTIMAGE2YDEFDBW128

    CMPB #1
    LBEQ PUTIMAGE2YDEFDBW128EVEN1
    CMPB #2
    LBEQ PUTIMAGE2YDEFDBW128EVEN2
    CMPB #4
    LBEQ PUTIMAGE2YDEFDBW128EVEN4

@IF PC128OP

    LEAX $8000,X

@ELSE

@ENDIF

    LDB <(IMAGEW2+1)
    STB <(IMAGEW+1)

PUTIMAGE2L1DB000W128
    ; LDB <(IMAGEW+1)
    DECB
PUTIMAGE2L1DBW128
    LDA B,Y
    STA B,X
    DECB
    CMPB #0
    BGE PUTIMAGE2L1DBW128

PUTIMAGE2L1DBNW128

    LDB <(IMAGEW2+1)
    LEAY B, Y

    LDB CURRENTSL
    LEAX B, X

    DEC <IMAGEH
    LDB <IMAGEH
    CMPB #0
    BEQ PUTIMAGECOMMONE2DBW128

    LDB <(IMAGEW2+1)
    STB <(IMAGEW+1)
    JMP PUTIMAGE2L1DB000W128

PUTIMAGECOMMONE2DBW128

    LDB <(IMAGEY2+1)
    STB <(IMAGEY+1)

    PULS X,D
    STB <IMAGEH
    PULS D
    STD <IMAGEW

@IF PC128OP

    LEAX $6000,X

@ELSE

    LEAX $2000,X

@ENDIF

    LDB <(IMAGEW+1)

PUTIMAGE2L12DB000W128
    DECB
PUTIMAGE2L12DBW128
    LDA B,Y
    STA B,X
    DECB
    CMPB #0
    BGE PUTIMAGE2L12DBW128

    LDB <(IMAGEW2+1)
    LEAY B, Y

    LDB CURRENTSL
    LEAX B, X

    DEC <IMAGEH
    LDB <IMAGEH
    CMPB #0
    LBEQ PUTIMAGECOMMONE5DBW128

    LDB <(IMAGEW2+1)
    STB <(IMAGEW+1)
    JMP PUTIMAGE2L12DB000W128

PUTIMAGECOMMONE5DBW128

PUTIMAGECOMMONEDBW128

@IF PC128OP

    PSHS D
    LDA #7
    STA BASE_SEGMENT+$E5
    PULS D

@ENDIF

    ANDCC #$AF
    
	RTS

@ENDIF

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; --- OPTIMIZED VERSION (w = 1)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

PUTIMAGE2YDEFDBW128EVEN1

    LDA CURRENTSL
    DECA
    STA <MATHPTR0

@IF PC128OP

    LEAX $8000,X

@ELSE

@ENDIF

PUTIMAGE2L1DB000W128EVEN1
    LDB ,Y+
    STB ,X+

PUTIMAGE2L1DBNW128EVEN1

    LDA <MATHPTR0
    LEAX A, X

    DEC <IMAGEH
    LDB <IMAGEH
    CMPB #0
    BEQ PUTIMAGECOMMONE2DBW128EVEN1

    JMP PUTIMAGE2L1DB000W128EVEN1

PUTIMAGECOMMONE2DBW128EVEN1

    PULS X,D
    STB <IMAGEH
    PULS D

@IF PC128OP

    LEAX $6000,X

@ELSE

    LEAX $2000,X

@ENDIF

PUTIMAGE2L12DB000W128EVEN1
    LDB ,Y+
    STB ,X+
    
    LDA <MATHPTR0
    LEAX A, X

    DEC <IMAGEH
    LDB <IMAGEH
    CMPB #0
    LBEQ PUTIMAGECOMMONE5DBW128EVEN1

    JMP PUTIMAGE2L12DB000W128EVEN1

PUTIMAGECOMMONE5DBW128EVEN1
PUTIMAGECOMMONEDBW128EVEN1

    JMP PUTIMAGECOMMONEDBW128EVENFINAL

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; --- OPTIMIZED VERSION (w = 2)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

PUTIMAGE2YDEFDBW128EVEN2

    LDA CURRENTSL
    DECA
    DECA
    STA <MATHPTR0

@IF PC128OP

    LEAX $8000,X

@ELSE

@ENDIF

PUTIMAGE2L1DB000W128EVEN2
    LDD ,Y++
    STD ,X++

PUTIMAGE2L1DBNW128EVEN2

    LDA <MATHPTR0
    LEAX A, X

    DEC <IMAGEH
    LDB <IMAGEH
    CMPB #0
    BEQ PUTIMAGECOMMONE2DBW128EVEN2

    JMP PUTIMAGE2L1DB000W128EVEN2

PUTIMAGECOMMONE2DBW128EVEN2

    PULS X,D
    STB <IMAGEH
    PULS D

@IF PC128OP

    LEAX $6000,X

@ELSE

    LEAX $2000,X

@ENDIF

PUTIMAGE2L12DB000W128EVEN2
    LDD ,Y++
    STD ,X++
    
    LDA <MATHPTR0
    LEAX A, X

    DEC <IMAGEH
    LDB <IMAGEH
    CMPB #0
    LBEQ PUTIMAGECOMMONE5DBW128EVEN2

    JMP PUTIMAGE2L12DB000W128EVEN2

PUTIMAGECOMMONE5DBW128EVEN2
PUTIMAGECOMMONEDBW128EVEN2

    JMP PUTIMAGECOMMONEDBW128EVENFINAL

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; --- OPTIMIZED VERSION (w = 4)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

PUTIMAGE2YDEFDBW128EVEN4

    LDA CURRENTSL
    DECA
    DECA
    DECA
    DECA
    STA <MATHPTR0

    LDA <IMAGEH
    CMPA #16
    BEQ PUTIMAGE2YDEFDBW128EVEN4HX
    CMPA #8
    BEQ PUTIMAGE2YDEFDBW128EVEN4HX
    CMPA #4
    BEQ PUTIMAGE2YDEFDBW128EVEN4HX

@IF PC128OP

    LEAX $8000,X

@ELSE

@ENDIF

PUTIMAGE2L1DB000W128EVEN4
    LDD ,Y++
    STD ,X++
    LDD ,Y++
    STD ,X++

PUTIMAGE2L1DBNW128EVEN4

    LDA <MATHPTR0
    LEAX A, X

    DEC <IMAGEH
    LDB <IMAGEH
    CMPB #0
    BEQ PUTIMAGECOMMONE2DBW128EVEN4

    JMP PUTIMAGE2L1DB000W128EVEN4

PUTIMAGECOMMONE2DBW128EVEN4

    LDB <(IMAGEY2+1)
    STB <(IMAGEY+1)

    PULS X,D
    STB <IMAGEH
    PULS D

@IF PC128OP

    LEAX $6000,X

@ELSE

    LEAX $2000,X

@ENDIF

PUTIMAGE2L12DB000W128EVEN4
    LDD ,Y++
    STD ,X++
    LDD ,Y++
    STD ,X++
    
    LDA <MATHPTR0
    LEAX A, X

    DEC <IMAGEH
    LDB <IMAGEH
    CMPB #0
    LBEQ PUTIMAGECOMMONE5DBW128EVEN4

    JMP PUTIMAGE2L12DB000W128EVEN4

PUTIMAGECOMMONE5DBW128EVEN4
PUTIMAGECOMMONEDBW128EVEN4

    JMP PUTIMAGECOMMONEDBW128EVENFINAL

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; --- OPTIMIZED VERSION (w = 4, h = 16, 8, 4)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

PUTIMAGE2YDEFDBW128EVEN4HX

@IF PC128OP

    LEAX $8000,X

@ELSE

@ENDIF

    CMPA #8
    LBEQ PUTIMAGE2L1DB000W128EVEN4H8
    CMPA #4
    LBEQ PUTIMAGE2L1DB000W128EVEN4H4

PUTIMAGE2L1DB000W128EVEN4H16
    LDD ,Y++
    STD ,X++
    LDD ,Y++
    STD ,X++
    LDA <MATHPTR0
    LEAX A, X
    LDD ,Y++
    STD ,X++
    LDD ,Y++
    STD ,X++
    LDA <MATHPTR0
    LEAX A, X
    LDD ,Y++
    STD ,X++
    LDD ,Y++
    STD ,X++
    LDA <MATHPTR0
    LEAX A, X
    LDD ,Y++
    STD ,X++
    LDD ,Y++
    STD ,X++
    LDA <MATHPTR0
    LEAX A, X
    LDD ,Y++
    STD ,X++
    LDD ,Y++
    STD ,X++
    LDA <MATHPTR0
    LEAX A, X
    LDD ,Y++
    STD ,X++
    LDD ,Y++
    STD ,X++
    LDA <MATHPTR0
    LEAX A, X
    LDD ,Y++
    STD ,X++
    LDD ,Y++
    STD ,X++
    LDA <MATHPTR0
    LEAX A, X
    LDD ,Y++
    STD ,X++
    LDD ,Y++
    STD ,X++
    LDA <MATHPTR0
    LEAX A, X
PUTIMAGE2L1DB000W128EVEN4H8
    LDD ,Y++
    STD ,X++
    LDD ,Y++
    STD ,X++
    LDA <MATHPTR0
    LEAX A, X
    LDD ,Y++
    STD ,X++
    LDD ,Y++
    STD ,X++
    LDA <MATHPTR0
    LEAX A, X
    LDD ,Y++
    STD ,X++
    LDD ,Y++
    STD ,X++
    LDA <MATHPTR0
    LEAX A, X
    LDD ,Y++
    STD ,X++
    LDD ,Y++
    STD ,X++
    LDA <MATHPTR0
    LEAX A, X
PUTIMAGE2L1DB000W128EVEN4H4
    LDD ,Y++
    STD ,X++
    LDD ,Y++
    STD ,X++
    LDA <MATHPTR0
    LEAX A, X
    LDD ,Y++
    STD ,X++
    LDD ,Y++
    STD ,X++
    LDA <MATHPTR0
    LEAX A, X
    LDD ,Y++
    STD ,X++
    LDD ,Y++
    STD ,X++
    LDA <MATHPTR0
    LEAX A, X
    LDD ,Y++
    STD ,X++
    LDD ,Y++
    STD ,X++

    LDB <(IMAGEY2+1)
    STB <(IMAGEY+1)

    PULS X,D
    STB <IMAGEH
    PULS D

@IF PC128OP

    LEAX $6000,X

@ELSE

    LEAX $2000,X

@ENDIF

    LDA <IMAGEH
    CMPA #8
    LBEQ PUTIMAGE2L1DB000W128EVEN4H8A
    CMPA #4
    LBEQ PUTIMAGE2L1DB000W128EVEN4H4A

PUTIMAGE2L1DB000W128EVEN4H16A
    LDD ,Y++
    STD ,X++
    LDD ,Y++
    STD ,X++
    LDA <MATHPTR0
    LEAX A, X
    LDD ,Y++
    STD ,X++
    LDD ,Y++
    STD ,X++
    LDA <MATHPTR0
    LEAX A, X
    LDD ,Y++
    STD ,X++
    LDD ,Y++
    STD ,X++
    LDA <MATHPTR0
    LEAX A, X
    LDD ,Y++
    STD ,X++
    LDD ,Y++
    STD ,X++
    LDA <MATHPTR0
    LEAX A, X
    LDD ,Y++
    STD ,X++
    LDD ,Y++
    STD ,X++
    LDA <MATHPTR0
    LEAX A, X
    LDD ,Y++
    STD ,X++
    LDD ,Y++
    STD ,X++
    LDA <MATHPTR0
    LEAX A, X
    LDD ,Y++
    STD ,X++
    LDD ,Y++
    STD ,X++
    LDA <MATHPTR0
    LEAX A, X
    LDD ,Y++
    STD ,X++
    LDD ,Y++
    STD ,X++
    LDA <MATHPTR0
    LEAX A, X
PUTIMAGE2L1DB000W128EVEN4H8A
    LDD ,Y++
    STD ,X++
    LDD ,Y++
    STD ,X++
    LDA <MATHPTR0
    LEAX A, X
    LDD ,Y++
    STD ,X++
    LDD ,Y++
    STD ,X++
    LDA <MATHPTR0
    LEAX A, X
    LDD ,Y++
    STD ,X++
    LDD ,Y++
    STD ,X++
    LDA <MATHPTR0
    LEAX A, X
    LDD ,Y++
    STD ,X++
    LDD ,Y++
    STD ,X++
    LDA <MATHPTR0
    LEAX A, X
PUTIMAGE2L1DB000W128EVEN4H4A
    LDD ,Y++
    STD ,X++
    LDD ,Y++
    STD ,X++
    LDA <MATHPTR0
    LEAX A, X
    LDD ,Y++
    STD ,X++
    LDD ,Y++
    STD ,X++
    LDA <MATHPTR0
    LEAX A, X
    LDD ,Y++
    STD ,X++
    LDD ,Y++
    STD ,X++
    LDA <MATHPTR0
    LEAX A, X
    LDD ,Y++
    STD ,X++
    LDD ,Y++
    STD ,X++

    JMP PUTIMAGECOMMONEDBW128EVENFINAL

PUTIMAGECOMMONEDBW128EVENFINAL

@IF PC128OP

    PSHS D
    LDA #7
    STA BASE_SEGMENT+$E5
    PULS D

@ENDIF

    ANDCC #$AF
    
	RTS

@ENDIF


; ----------------------------------------------
; Version active on double buffering OFF
; ----------------------------------------------

@IF !vestigialConfig.doubleBufferSelected || !vestigialConfig.doubleBuffer

PUTIMAGEORIG

@IF vestigialConfig.screenModeUnique

@ELSE

    LDA CURRENTMODE
    CMPA #0
    BNE PUTIMAGE0X
    JMP PUTIMAGE0
PUTIMAGE0X
    CMPA #1
    BNE PUTIMAGE1X
    JMP PUTIMAGE1
PUTIMAGE1X
    CMPA #2
    BNE PUTIMAGE2X
    JMP PUTIMAGE2
PUTIMAGE2X
    CMPA #3
    BNE PUTIMAGE3X
    JMP PUTIMAGE3
PUTIMAGE3X
    CMPA #4
    BNE PUTIMAGE4X
    JMP PUTIMAGE4
PUTIMAGE4X
    RTS

@ENDIF

@IF !vestigialConfig.screenModeUnique || ( ( currentMode == 1 ) || ( currentMode == 4 ) )

PUTIMAGE1
PUTIMAGE4
    RTS

@ENDIF

@IF !vestigialConfig.screenModeUnique || ( ( currentMode == 0 ) || ( currentMode == 2 ) )

PUTIMAGE0
PUTIMAGE2

    PSHS Y

    LDX BITMAPADDRESS

    ANDCC #$FE
    LDD <IMAGEY
    STD <IMAGEY2
    LSLB
    ROLA
    LSLB
    ROLA

    LSLB
    ROLA

    TFR D, Y

    ANDCC #$FE
    LDD <IMAGEY
    STD <IMAGEY2
    LSLB
    ROLA
    LSLB
    ROLA

    LSLB
    ROLA
    LSLB
    ROLA
    LSLB
    ROLA

    LEAY D, Y
    TFR Y, D
    LEAX D, X

    ANDCC #$FE
    LDD <IMAGEX
    LSRA
    RORB
    LSRA
    RORB
    LSRA
    RORB
    LEAX D, X

    PULS Y

    LDA ,Y
    LDB 1,Y
    LSRA
    RORB
    LSRA
    RORB
    LSRA
    RORB
    STD <IMAGEW
    STD <IMAGEW2
    LDA 2,Y
    STA <IMAGEH
    STA <IMAGEH2

    LEAY 3,Y

    LDD <IMAGEW
    PSHS D
    LDB <IMAGEH
    PSHS X,D

    JMP PUTIMAGE2Y

@ENDIF

@IF !vestigialConfig.screenModeUnique || ( ( currentMode == 3 ) )

PUTIMAGE3

    PSHS Y

    CLRA
    LDB <IMAGEY+1
    STB <IMAGEY2+1
    LSLB
    ROLA
    ADDD #PLOTVBASE
    TFR D, X
    LDD , X
@IF TO8
    ADDD BITMAPADDRESS
@ENDIF
    TFR D, X

    LDB <(IMAGEX+1)
    LSRB
    LSRB
    LEAX B, X

    PULS Y

    LDA ,Y
    LDB 1,Y
    LSRA
    RORB
    LSRA
    RORB
    STD <IMAGEW
    STD <IMAGEW2
    LDA 2,Y
    STA <IMAGEH
    STA <IMAGEH2

    LEAY 3,Y

    LDD <IMAGEW
    PSHS D
    LDB <IMAGEH
    PSHS X,D

    JMP PUTIMAGE2Y

@ENDIF

PUTIMAGE2Y
    LDA <IMAGEF
    ANDA #32
    CMPA #32
    LBNE PUTIMAGE2YDEF

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

PUTIMAGE2YTRANS
    LDA CURRENTMODE
    ; CMPA #2
    ; BEQ PUTIMAGE2YTRANS2
    CMPA #3
    BEQ PUTIMAGE2YTRANS3
    JMP PUTIMAGE2YDEF

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

PUTIMAGE2YTRANS3

@IF TO8

    LDA BASE_SEGMENT+$c3
    ORA #$01
    STA BASE_SEGMENT+$c3

@ELSE

    LDA BASE_SEGMENT+$c0
    ORA #$01
    STA BASE_SEGMENT+$c0

@ENDIF

    LDD <IMAGEW2
    STD <IMAGEW
PUTIMAGE2YTRANS3L1000
    LDB <(IMAGEW+1)
    DECB
PUTIMAGE2YTRANS3L1

@IF transparencyCoarse

    LDA B,Y
    BEQ PUTIMAGE2YTRANS3L1P4X
    STA B,X
PUTIMAGE2YTRANS3L1P4X

@ELSE

    LDA #0
    STA <MATHPTR5
    LDA B,Y
    ; 00 01 10 00
    ANDA #$F0
    ; -> 00 00 00 00
    BEQ PUTIMAGE2YTRANS3L1P4X
    LDA <MATHPTR5
    ORA #$F0
    STA <MATHPTR5
PUTIMAGE2YTRANS3L1P4X
    LDA B,Y
    ; 00 01 10 00
    ANDA #$0F
    ; -> 00 01 00 00
    BEQ PUTIMAGE2YTRANS3L1P3X
    LDA <MATHPTR5
    ORA #$0F
    ; MATH PTR = 00 11 00 00
    STA <MATHPTR5
PUTIMAGE2YTRANS3L1P3X
    LDA <MATHPTR5
    ; 00 11 11 00
    EORA #$FF
    ; 11 00 00 11
    STA <MATHPTR6
    LDA B,X
    ; 00 00 00 00
    ANDA <MATHPTR6
    STA <MATHPTR6
    ; 00 00 00 00
    LDA B,Y
    ANDA <MATHPTR5
    ORA <MATHPTR6
    STA B,X

@ENDIF

    DECB
    CMPB #0
    BGE PUTIMAGE2YTRANS3L1

    LDU <IMAGEW
    LEAU -128, U
    STU <IMAGEW
    CMPU #0
    BLE PUTIMAGE2YTRANS3L1001

    LEAY 128, Y
    LEAX 128, X
    JMP PUTIMAGE2YTRANS3L1000

PUTIMAGE2YTRANS3L1001

    LDA <IMAGEF
    ANDA #64
    CMPA #0
    BEQ PUTIMAGE2YTRANS3L1N

    LDA <IMAGEF
    ANDA #1
    CMPA #1
    BEQ PUTIMAGE2YTRANS3L1N0

    ORA #65
    STA <IMAGEF

    LDD <IMAGEW2
    STD <IMAGEW
    LDB CURRENTSL
    LEAX B, X
    JMP PUTIMAGE2YTRANS3L1000

PUTIMAGE2YTRANS3L1N0
    LDA <IMAGEF
    ANDA #$FE
    STA <IMAGEF

PUTIMAGE2YTRANS3L1N

    LDD <IMAGEW2
    LEAY D, Y

    LDB CURRENTSL
    LEAX B, X

    DEC <IMAGEH
    LDB <IMAGEH
    CMPB #0
    BEQ PUTIMAGE2YTRANS3COMMONE2

    LDD <IMAGEW2
    STD <IMAGEW
    JMP PUTIMAGE2YTRANS3L1000

PUTIMAGE2YTRANS3COMMONE2A

PUTIMAGE2YTRANS3COMMONE2AY

    LDD <IMAGEW2
    LEAY D, Y
    DEC <IMAGEH
    LDB <IMAGEH
    CMPB #0
    BNE PUTIMAGE2YTRANS3COMMONE2AY

PUTIMAGE2YTRANS3COMMONE2

    CLRA
    LDB <(IMAGEY2+1)
    STB <(IMAGEY+1)

    PULS X,D
    STB <IMAGEH
    PULS D
    STA <IMAGEW

@IF TO8

    LDA BASE_SEGMENT+$c3
    ANDA #$fe
    STA BASE_SEGMENT+$c3

@ELSE

    LDA BASE_SEGMENT+$c0
    ANDA #$fe
    STA BASE_SEGMENT+$c0

@ENDIF

    LDD <IMAGEW2
    STD <IMAGEW
PUTIMAGE2YTRANS3L12000
    LDB <(IMAGEW+1)
    DECB
PUTIMAGE2YTRANS3L12

@IF transparencyCoarse

    LDA B,Y
    BEQ PUTIMAGE2YTRANS3L12P4X
    STA B,X
PUTIMAGE2YTRANS3L12P4X

@ELSE

    LDA #0
    STA <MATHPTR5
    LDA B,Y
    ; 00 01 10 00
    ANDA #$F0
    ; -> 00 00 00 00
    BEQ PUTIMAGE2YTRANS3L12P4X
    LDA <MATHPTR5
    ORA #$F0
    STA <MATHPTR5
PUTIMAGE2YTRANS3L12P4X
    LDA B,Y
    ; 00 01 10 00
    ANDA #$0F
    ; -> 00 01 00 00
    BEQ PUTIMAGE2YTRANS3L12P3X
    LDA <MATHPTR5
    ORA #$0F
    ; MATH PTR = 00 11 00 00
    STA <MATHPTR5
PUTIMAGE2YTRANS3L12P3X
    LDA <MATHPTR5
    ; 00 11 11 00
    EORA #$FF
    ; 11 00 00 11
    STA <MATHPTR6
    LDA B,X
    ; 00 00 00 00
    ANDA <MATHPTR6
    STA <MATHPTR6
    ; 00 00 00 00
    LDA B,Y
    ANDA <MATHPTR5
    ORA <MATHPTR6
    STA B,X

@ENDIF

    DECB
    CMPB #0
    BGE PUTIMAGE2YTRANS3L12

    LDU <IMAGEW
    LEAU -128, U
    STU <IMAGEW
    CMPU #0
    BLE PUTIMAGE2YTRANS3L12001

    LEAY 128, Y
    LEAX 128, X
    JMP PUTIMAGE2YTRANS3L12000

PUTIMAGE2YTRANS3L12001

    LDA <IMAGEF
    ANDA #64
    CMPA #0
    BEQ PUTIMAGE2YTRANS3L12N

    LDA <IMAGEF
    ANDA #1
    CMPA #1
    BEQ PUTIMAGE2YTRANS3L12N0

    ORA #65
    STA <IMAGEF

    LDD <IMAGEW2
    STD <IMAGEW2
    LDB CURRENTSL
    LEAX B, X
    JMP PUTIMAGE2YTRANS3L12000

PUTIMAGE2YTRANS3L12N0
    LDA <IMAGEF
    ANDA #$FE
    STA <IMAGEF

PUTIMAGE2YTRANS3L12N

    LDD <IMAGEW2
    LEAY D, Y

    LDB CURRENTSL
    LEAX B, X

    DEC <IMAGEH
    LDB <IMAGEH
    CMPB #0
    LBEQ PUTIMAGECOMMONE5

    LDD <IMAGEW2
    STD <IMAGEW
    JMP PUTIMAGE2YTRANS3L12000

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

PUTIMAGE2YDEF

@IF TO8

    LDA BASE_SEGMENT+$c3
    ORA #$01
    STA BASE_SEGMENT+$c3

@ELSE

    LDA BASE_SEGMENT+$c0
    ORA #$01
    STA BASE_SEGMENT+$c0

@ENDIF

    LDD <IMAGEW2
    STD <IMAGEW
PUTIMAGE2L1000
    LDB <(IMAGEW+1)
    DECB
PUTIMAGE2L1
    LDA B,Y
    STA B,X
    DECB
    CMPB #0
    BGE PUTIMAGE2L1

    LDU <IMAGEW
    LEAU -128, U
    STU <IMAGEW
    CMPU #0
    BLE PUTIMAGE2L1001

    LEAY 128, Y
    LEAX 128, X
    JMP PUTIMAGE2L1000

PUTIMAGE2L1001

    LDA <IMAGEF
    ANDA #64
    CMPA #0
    BEQ PUTIMAGE2L1N

    LDA <IMAGEF
    ANDA #1
    CMPA #1
    BEQ PUTIMAGE2L1N0

    ORA #65
    STA <IMAGEF

    LDD <IMAGEW2
    STD <IMAGEW
    LDB CURRENTSL
    LEAX B, X
    JMP PUTIMAGE2L1000

PUTIMAGE2L1N0
    LDA <IMAGEF
    ANDA #$FE
    STA <IMAGEF

PUTIMAGE2L1N

    LDD <IMAGEW2
    LEAY D, Y

    LDB CURRENTSL
    LEAX B, X

    DEC <IMAGEH
    LDB <IMAGEH
    CMPB #0
    BEQ PUTIMAGECOMMONE2

    LDD <IMAGEW2
    STD <IMAGEW
    JMP PUTIMAGE2L1000

PUTIMAGECOMMONE2A

PUTIMAGECOMMONE2AY

    LDD <IMAGEW2
    LEAY D, Y
    DEC <IMAGEH
    LDB <IMAGEH
    CMPB #$0
    BNE PUTIMAGECOMMONE2AY

PUTIMAGECOMMONE2

    LDD <IMAGEY2
    STD <IMAGEY

    PULS X,D
    STB <IMAGEH
    PULS D
    STD <IMAGEW

@IF TO8

    LDA BASE_SEGMENT+$c3
    ANDA #$fe
    STA BASE_SEGMENT+$c3

@ELSE

    LDA BASE_SEGMENT+$c0
    ANDA #$fe
    STA BASE_SEGMENT+$c0

@ENDIF

    LDD <IMAGEW2
    STD <IMAGEW
PUTIMAGE2L12000
    LDB <(IMAGEW+1)
    DECB
PUTIMAGE2L12
    LDA B,Y
    STA B,X
    DECB
    CMPB #0
    BGE PUTIMAGE2L12

    LDU <IMAGEW
    LEAU -128, U
    STU <IMAGEW
    CMPU #0
    BLE PUTIMAGE2L12001

    LEAY 128, Y
    LEAX 128, X
    JMP PUTIMAGE2L12000

PUTIMAGE2L12001

    LDA <IMAGEF
    ANDA #64
    CMPA #0
    BEQ PUTIMAGE2L12N

    LDA <IMAGEF
    ANDA #1
    CMPA #1
    BEQ PUTIMAGE2L12N0

    ORA #65
    STA <IMAGEF

    LDD <IMAGEW2
    STD <IMAGEW
    LDB CURRENTSL
    LEAX B, X
    JMP PUTIMAGE2L12000

PUTIMAGE2L12N0
    LDA <IMAGEF
    ANDA #$FE
    STA <IMAGEF

PUTIMAGE2L12N

    LDD <IMAGEW2
    LEAY D, Y

    LDB CURRENTSL
    LEAX B, X

    DEC <IMAGEH
    LDB <IMAGEH
    CMPB #0
    BEQ PUTIMAGECOMMONE5

    LDD <IMAGEW2
    STD <IMAGEW
    JMP PUTIMAGE2L12000

PUTIMAGECOMMONE5A

PUTIMAGECOMMONE5AY

    LDD <IMAGEW2
    LEAY D, Y
    DEC <IMAGEH
    LDB <IMAGEH
    CMPB #0
    BNE PUTIMAGECOMMONE5AY

PUTIMAGECOMMONE5

    LDD <IMAGEY2
    STD <IMAGEY

;     LDA CURRENTMODE
;     CMPA #3
;     BEQ PUTIMAGECOMMONE53
;     LDU #4
;     JMP PUTIMAGECOMMONE50
; PUTIMAGECOMMONE53
;     LDU #16
;     JMP PUTIMAGECOMMONE50

; PUTIMAGECOMMONE50
;     LDA #0
;     STA BASE_SEGMENT+$DB
; PUTIMAGECOMMONE50L1
;     LDD ,Y
;     LEAY 2,Y
;     STB BASE_SEGMENT+$DA
;     STA BASE_SEGMENT+$DA
;     LEAU -1, U
;     CMPU #$FFFF
    ; BNE PUTIMAGECOMMONE50L1

PUTIMAGECOMMONE
    RTS

@ENDIF